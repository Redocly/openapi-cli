"use strict";

var _error = _interopRequireDefault(require("../error"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class UniqueParameterNames {
  static get ruleName() {
    return 'uniqueParameterNames';
  }

  constructor(opts) {
    const {
      msg = 'example argument'
    } = opts || {};
    this.msg = msg;
    this.parametersStack = [];
  }

  onEnter(node, definition, ctx) {
    let error;

    if (definition.name === 'OpenAPIParameter') {
      if (this.parametersStack.includes(node.name)) {
        ctx.path.push('name');
        console.log(this.msg);
        error = (0, _error.default)('Duplicate parameters are not allowed. This name already used on higher level.', node, ctx);
        ctx.path.pop();
      }

      this.parametersStack.push(node.name);
    }

    return error ? [error] : [];
  }

  onExit(node) {
    if (node.parameters) {
      if (Array.isArray(node.parameters)) {
        node.parameters.forEach(() => this.parametersStack.pop());
      } else if (typeof node.parameters === 'object') {
        Object.keys(node.parameters).forEach(() => this.parametersStack.pop());
      }
    }
  }

}

module.exports = UniqueParameterNames;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leHRlbmRlZFJ1bGVzL3VuaXF1ZVBhcmFtZXRlck5hbWVzLmpzIl0sIm5hbWVzIjpbIlVuaXF1ZVBhcmFtZXRlck5hbWVzIiwicnVsZU5hbWUiLCJjb25zdHJ1Y3RvciIsIm9wdHMiLCJtc2ciLCJwYXJhbWV0ZXJzU3RhY2siLCJvbkVudGVyIiwibm9kZSIsImRlZmluaXRpb24iLCJjdHgiLCJlcnJvciIsIm5hbWUiLCJpbmNsdWRlcyIsInBhdGgiLCJwdXNoIiwiY29uc29sZSIsImxvZyIsInBvcCIsIm9uRXhpdCIsInBhcmFtZXRlcnMiLCJBcnJheSIsImlzQXJyYXkiLCJmb3JFYWNoIiwiT2JqZWN0Iiwia2V5cyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQSxNQUFNQSxvQkFBTixDQUEyQjtBQUN6QixhQUFXQyxRQUFYLEdBQXNCO0FBQ3BCLFdBQU8sc0JBQVA7QUFDRDs7QUFFREMsRUFBQUEsV0FBVyxDQUFDQyxJQUFELEVBQU87QUFDaEIsVUFBTTtBQUFFQyxNQUFBQSxHQUFHLEdBQUc7QUFBUixRQUErQkQsSUFBSSxJQUFJLEVBQTdDO0FBQ0EsU0FBS0MsR0FBTCxHQUFXQSxHQUFYO0FBQ0EsU0FBS0MsZUFBTCxHQUF1QixFQUF2QjtBQUNEOztBQUdEQyxFQUFBQSxPQUFPLENBQUNDLElBQUQsRUFBT0MsVUFBUCxFQUFtQkMsR0FBbkIsRUFBd0I7QUFDN0IsUUFBSUMsS0FBSjs7QUFDQSxRQUFJRixVQUFVLENBQUNHLElBQVgsS0FBb0Isa0JBQXhCLEVBQTRDO0FBQzFDLFVBQUksS0FBS04sZUFBTCxDQUFxQk8sUUFBckIsQ0FBOEJMLElBQUksQ0FBQ0ksSUFBbkMsQ0FBSixFQUE4QztBQUM1Q0YsUUFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVNDLElBQVQsQ0FBYyxNQUFkO0FBQ0FDLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLEtBQUtaLEdBQWpCO0FBQ0FNLFFBQUFBLEtBQUssR0FBRyxvQkFBWSwrRUFBWixFQUE2RkgsSUFBN0YsRUFBbUdFLEdBQW5HLENBQVI7QUFDQUEsUUFBQUEsR0FBRyxDQUFDSSxJQUFKLENBQVNJLEdBQVQ7QUFDRDs7QUFDRCxXQUFLWixlQUFMLENBQXFCUyxJQUFyQixDQUEwQlAsSUFBSSxDQUFDSSxJQUEvQjtBQUNEOztBQUNELFdBQU9ELEtBQUssR0FBRyxDQUFDQSxLQUFELENBQUgsR0FBYSxFQUF6QjtBQUNEOztBQUVEUSxFQUFBQSxNQUFNLENBQUNYLElBQUQsRUFBTztBQUNYLFFBQUlBLElBQUksQ0FBQ1ksVUFBVCxFQUFxQjtBQUNuQixVQUFJQyxLQUFLLENBQUNDLE9BQU4sQ0FBY2QsSUFBSSxDQUFDWSxVQUFuQixDQUFKLEVBQW9DO0FBQ2xDWixRQUFBQSxJQUFJLENBQUNZLFVBQUwsQ0FBZ0JHLE9BQWhCLENBQXdCLE1BQU0sS0FBS2pCLGVBQUwsQ0FBcUJZLEdBQXJCLEVBQTlCO0FBQ0QsT0FGRCxNQUVPLElBQUksT0FBT1YsSUFBSSxDQUFDWSxVQUFaLEtBQTJCLFFBQS9CLEVBQXlDO0FBQzlDSSxRQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWWpCLElBQUksQ0FBQ1ksVUFBakIsRUFBNkJHLE9BQTdCLENBQXFDLE1BQU0sS0FBS2pCLGVBQUwsQ0FBcUJZLEdBQXJCLEVBQTNDO0FBQ0Q7QUFDRjtBQUNGOztBQWxDd0I7O0FBcUMzQlEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCMUIsb0JBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUVycm9yIGZyb20gJy4uL2Vycm9yJztcblxuY2xhc3MgVW5pcXVlUGFyYW1ldGVyTmFtZXMge1xuICBzdGF0aWMgZ2V0IHJ1bGVOYW1lKCkge1xuICAgIHJldHVybiAndW5pcXVlUGFyYW1ldGVyTmFtZXMnO1xuICB9XG5cbiAgY29uc3RydWN0b3Iob3B0cykge1xuICAgIGNvbnN0IHsgbXNnID0gJ2V4YW1wbGUgYXJndW1lbnQnIH0gPSBvcHRzIHx8IHt9O1xuICAgIHRoaXMubXNnID0gbXNnO1xuICAgIHRoaXMucGFyYW1ldGVyc1N0YWNrID0gW107XG4gIH1cblxuXG4gIG9uRW50ZXIobm9kZSwgZGVmaW5pdGlvbiwgY3R4KSB7XG4gICAgbGV0IGVycm9yO1xuICAgIGlmIChkZWZpbml0aW9uLm5hbWUgPT09ICdPcGVuQVBJUGFyYW1ldGVyJykge1xuICAgICAgaWYgKHRoaXMucGFyYW1ldGVyc1N0YWNrLmluY2x1ZGVzKG5vZGUubmFtZSkpIHtcbiAgICAgICAgY3R4LnBhdGgucHVzaCgnbmFtZScpO1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm1zZyk7XG4gICAgICAgIGVycm9yID0gY3JlYXRlRXJyb3IoJ0R1cGxpY2F0ZSBwYXJhbWV0ZXJzIGFyZSBub3QgYWxsb3dlZC4gVGhpcyBuYW1lIGFscmVhZHkgdXNlZCBvbiBoaWdoZXIgbGV2ZWwuJywgbm9kZSwgY3R4KTtcbiAgICAgICAgY3R4LnBhdGgucG9wKCk7XG4gICAgICB9XG4gICAgICB0aGlzLnBhcmFtZXRlcnNTdGFjay5wdXNoKG5vZGUubmFtZSk7XG4gICAgfVxuICAgIHJldHVybiBlcnJvciA/IFtlcnJvcl0gOiBbXTtcbiAgfVxuXG4gIG9uRXhpdChub2RlKSB7XG4gICAgaWYgKG5vZGUucGFyYW1ldGVycykge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkobm9kZS5wYXJhbWV0ZXJzKSkge1xuICAgICAgICBub2RlLnBhcmFtZXRlcnMuZm9yRWFjaCgoKSA9PiB0aGlzLnBhcmFtZXRlcnNTdGFjay5wb3AoKSk7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBub2RlLnBhcmFtZXRlcnMgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIE9iamVjdC5rZXlzKG5vZGUucGFyYW1ldGVycykuZm9yRWFjaCgoKSA9PiB0aGlzLnBhcmFtZXRlcnNTdGFjay5wb3AoKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVW5pcXVlUGFyYW1ldGVyTmFtZXM7XG4iXX0=