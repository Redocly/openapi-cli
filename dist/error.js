"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _yaml = require("./yaml");

const prettyPrintError = (error, enableCodeframe) => {
  const message = `${error.location.startLine}:${error.location.startCol}` + ' Following error occured:\n' + `${error.message} by path ${error.path}\n` + `${enableCodeframe ? `${error.codeFrame}\n` : ''}` + `${error.pathStack.length ? '\nError traced by following path:\n' : ''}` + `${error.pathStack.length ? error.pathStack.join('\n') : ''}\n`;
  return message;
};

const createError = (msg, node, ctx, target) => {
  const location = (0, _yaml.getLocationByPath)(Array.from(ctx.path), ctx, target);
  const body = {
    message: msg,
    path: ctx.path.join('/'),
    pathStack: ctx.pathStack.map(el => el.join('/')),
    location,
    codeFrame: ctx.enableCodeframe ? (0, _yaml.getCodeFrameForLocation)(location.startIndex, location.endIndex, ctx.source) : null,
    value: node,
    severity: 'ERROR'
  };
  return { ...body,
    prettyPrint: () => prettyPrintError(body, ctx.enableCodeframe)
  };
};

var _default = createError;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lcnJvci5qcyJdLCJuYW1lcyI6WyJwcmV0dHlQcmludEVycm9yIiwiZXJyb3IiLCJlbmFibGVDb2RlZnJhbWUiLCJtZXNzYWdlIiwibG9jYXRpb24iLCJzdGFydExpbmUiLCJzdGFydENvbCIsInBhdGgiLCJjb2RlRnJhbWUiLCJwYXRoU3RhY2siLCJsZW5ndGgiLCJqb2luIiwiY3JlYXRlRXJyb3IiLCJtc2ciLCJub2RlIiwiY3R4IiwidGFyZ2V0IiwiQXJyYXkiLCJmcm9tIiwiYm9keSIsIm1hcCIsImVsIiwic3RhcnRJbmRleCIsImVuZEluZGV4Iiwic291cmNlIiwidmFsdWUiLCJzZXZlcml0eSIsInByZXR0eVByaW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUEsTUFBTUEsZ0JBQWdCLEdBQUcsQ0FBQ0MsS0FBRCxFQUFRQyxlQUFSLEtBQTRCO0FBQ25ELFFBQU1DLE9BQU8sR0FBSSxHQUFFRixLQUFLLENBQUNHLFFBQU4sQ0FBZUMsU0FBVSxJQUFHSixLQUFLLENBQUNHLFFBQU4sQ0FBZUUsUUFBUyxFQUF2RCxHQUNkLDZCQURjLEdBRWIsR0FBRUwsS0FBSyxDQUFDRSxPQUFRLFlBQVdGLEtBQUssQ0FBQ00sSUFBSyxJQUZ6QixHQUdiLEdBQUVMLGVBQWUsR0FBSSxHQUFFRCxLQUFLLENBQUNPLFNBQVUsSUFBdEIsR0FBNEIsRUFBRyxFQUhuQyxHQUliLEdBQUVQLEtBQUssQ0FBQ1EsU0FBTixDQUFnQkMsTUFBaEIsR0FBeUIscUNBQXpCLEdBQWlFLEVBQUcsRUFKekQsR0FLYixHQUFFVCxLQUFLLENBQUNRLFNBQU4sQ0FBZ0JDLE1BQWhCLEdBQXlCVCxLQUFLLENBQUNRLFNBQU4sQ0FBZ0JFLElBQWhCLENBQXFCLElBQXJCLENBQXpCLEdBQXNELEVBQUcsSUFMOUQ7QUFNQSxTQUFPUixPQUFQO0FBQ0QsQ0FSRDs7QUFVQSxNQUFNUyxXQUFXLEdBQUcsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLEdBQVosRUFBaUJDLE1BQWpCLEtBQTRCO0FBQzlDLFFBQU1aLFFBQVEsR0FBRyw2QkFBa0JhLEtBQUssQ0FBQ0MsSUFBTixDQUFXSCxHQUFHLENBQUNSLElBQWYsQ0FBbEIsRUFBd0NRLEdBQXhDLEVBQTZDQyxNQUE3QyxDQUFqQjtBQUNBLFFBQU1HLElBQUksR0FBRztBQUNYaEIsSUFBQUEsT0FBTyxFQUFFVSxHQURFO0FBRVhOLElBQUFBLElBQUksRUFBRVEsR0FBRyxDQUFDUixJQUFKLENBQVNJLElBQVQsQ0FBYyxHQUFkLENBRks7QUFHWEYsSUFBQUEsU0FBUyxFQUFFTSxHQUFHLENBQUNOLFNBQUosQ0FBY1csR0FBZCxDQUFtQkMsRUFBRCxJQUFRQSxFQUFFLENBQUNWLElBQUgsQ0FBUSxHQUFSLENBQTFCLENBSEE7QUFJWFAsSUFBQUEsUUFKVztBQUtYSSxJQUFBQSxTQUFTLEVBQUVPLEdBQUcsQ0FBQ2IsZUFBSixHQUNQLG1DQUF3QkUsUUFBUSxDQUFDa0IsVUFBakMsRUFBNkNsQixRQUFRLENBQUNtQixRQUF0RCxFQUFnRVIsR0FBRyxDQUFDUyxNQUFwRSxDQURPLEdBQ3VFLElBTnZFO0FBT1hDLElBQUFBLEtBQUssRUFBRVgsSUFQSTtBQVFYWSxJQUFBQSxRQUFRLEVBQUU7QUFSQyxHQUFiO0FBVUEsU0FBTyxFQUNMLEdBQUdQLElBREU7QUFFTFEsSUFBQUEsV0FBVyxFQUFFLE1BQU0zQixnQkFBZ0IsQ0FBQ21CLElBQUQsRUFBT0osR0FBRyxDQUFDYixlQUFYO0FBRjlCLEdBQVA7QUFJRCxDQWhCRDs7ZUFrQmVVLFciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRMb2NhdGlvbkJ5UGF0aCwgZ2V0Q29kZUZyYW1lRm9yTG9jYXRpb24gfSBmcm9tICcuL3lhbWwnO1xuXG5jb25zdCBwcmV0dHlQcmludEVycm9yID0gKGVycm9yLCBlbmFibGVDb2RlZnJhbWUpID0+IHtcbiAgY29uc3QgbWVzc2FnZSA9IGAke2Vycm9yLmxvY2F0aW9uLnN0YXJ0TGluZX06JHtlcnJvci5sb2NhdGlvbi5zdGFydENvbH1gXG4gICsgJyBGb2xsb3dpbmcgZXJyb3Igb2NjdXJlZDpcXG4nXG4gICsgYCR7ZXJyb3IubWVzc2FnZX0gYnkgcGF0aCAke2Vycm9yLnBhdGh9XFxuYFxuICArIGAke2VuYWJsZUNvZGVmcmFtZSA/IGAke2Vycm9yLmNvZGVGcmFtZX1cXG5gIDogJyd9YFxuICArIGAke2Vycm9yLnBhdGhTdGFjay5sZW5ndGggPyAnXFxuRXJyb3IgdHJhY2VkIGJ5IGZvbGxvd2luZyBwYXRoOlxcbicgOiAnJ31gXG4gICsgYCR7ZXJyb3IucGF0aFN0YWNrLmxlbmd0aCA/IGVycm9yLnBhdGhTdGFjay5qb2luKCdcXG4nKSA6ICcnfVxcbmA7XG4gIHJldHVybiBtZXNzYWdlO1xufTtcblxuY29uc3QgY3JlYXRlRXJyb3IgPSAobXNnLCBub2RlLCBjdHgsIHRhcmdldCkgPT4ge1xuICBjb25zdCBsb2NhdGlvbiA9IGdldExvY2F0aW9uQnlQYXRoKEFycmF5LmZyb20oY3R4LnBhdGgpLCBjdHgsIHRhcmdldCk7XG4gIGNvbnN0IGJvZHkgPSB7XG4gICAgbWVzc2FnZTogbXNnLFxuICAgIHBhdGg6IGN0eC5wYXRoLmpvaW4oJy8nKSxcbiAgICBwYXRoU3RhY2s6IGN0eC5wYXRoU3RhY2subWFwKChlbCkgPT4gZWwuam9pbignLycpKSxcbiAgICBsb2NhdGlvbixcbiAgICBjb2RlRnJhbWU6IGN0eC5lbmFibGVDb2RlZnJhbWVcbiAgICAgID8gZ2V0Q29kZUZyYW1lRm9yTG9jYXRpb24obG9jYXRpb24uc3RhcnRJbmRleCwgbG9jYXRpb24uZW5kSW5kZXgsIGN0eC5zb3VyY2UpIDogbnVsbCxcbiAgICB2YWx1ZTogbm9kZSxcbiAgICBzZXZlcml0eTogJ0VSUk9SJyxcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICAuLi5ib2R5LFxuICAgIHByZXR0eVByaW50OiAoKSA9PiBwcmV0dHlQcmludEVycm9yKGJvZHksIGN0eC5lbmFibGVDb2RlZnJhbWUpLFxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlRXJyb3I7XG4iXX0=