openapi: 3.0.1
info:
  title: Sample API
  license:
    name: MIT
  version: 0.0.1
paths:
  /user/{userId}:
    summary: Get a list of all users
    post:
      $ref: operations/test/operation.yaml
    get:
      $ref: operations/test/operation-2.yaml
components:
  schemas:
    Pet:
      type: "object"
      required:
        - "name"
        - "photoUrls"
      properties:
        id:
          type: "integer"
          format: "int64"
        category:
          type: string
        name:
          type: "string"
          example: "doggie"
        photoUrls:
          type: "array"
          xml:
            name: "photoUrl"
            wrapped: true
          items:
            type: "string"
        status:
          type: "string"
          description: "pet status in the store"
          enum:
          - "available"
          - "pending"
          - 12
      discriminator:
        propertyName: petType
        mapping:
          dog: Dog
    socialNetworkAccount:
      type: string
      enum:
        - bla
        - blalblabla
    newUser:
      properties:
        name:
          type: string
      required:
        - name
      type: object
    user:
      type: object
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/newUser'
        - $ref: '#/components/schemas/newUser'
      properties:
        name:
          type: string
        socialAccount:
          $ref: '#/components/schemas/socialNetworkAccount'
        pet:
          $ref: '#/components/schemas/Pet'
      externalDocs:
        url: https://google.com
servers:
  - url: https://{username}.gigantic-server.com:{port}/{basePath}
    description: The production API server
    variables:
      username:
        # note! no enum here means it is an open value
        default: demo
        description: this value is assigned by the service provider, in this example `gigantic-server.com`
      port:
        enum:
          - '8443'
          - '443'
        default: '8443'
      basePath:
        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`
        default: v2